/*
 * Interfaz donde se registran y modifican las consultas
 */
package GUI;

import Utils.ValidationsAndMessages;
import Utils.StyleManager;
import ClasesBase.Visit;
import ClasesBase.Patient;
import DAO.DAOVisit;
import Utils.Constants;
import static Utils.GeneralUtils.calculateAge;
import static Utils.GeneralUtils.handleFocus;
import static Utils.GeneralUtils.setCustomFont;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Calendar;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

public class ABMVisit extends javax.swing.JFrame {

    private final ClinicalHistory clinicalHistoryFrame;
    private final DAOVisit daoVisit;
    private Visit visit;
    private int idVisit;
    private final Calendar calendar;
    private final long dni;
    private boolean origin;//true if comes from "see" false otherwise

    /**
     * Creates new form ABMConsultaCompleta
     *
     * @param parent
     * @param dni
     * @param patient
     */
    public ABMVisit(java.awt.Frame parent, long dni,
            Patient patient) {
        initComponents();
        this.dni = dni;
        this.txtaReason.grabFocus();
        daoVisit = new DAOVisit();
        this.origin = false;
        clinicalHistoryFrame = (ClinicalHistory) parent;
        fillPatientFields(patient);
        calendar = Calendar.getInstance();
        String day = calendar.get(Calendar.DAY_OF_MONTH) + "";
        String month = calendar.get(Calendar.MONTH) + 1 + "";
        String year = calendar.get(Calendar.YEAR) + "";
        this.lblDate.setText(day + "/" + month + "/" + year);
        setIconImage(getIconImage());
        StyleManager.paint(this);
        pnlDate.setBackground(StyleManager.getSecondaryColor(StyleManager.actualColor));
        pnlFullName.setBackground(StyleManager.getSecondaryColor(StyleManager.actualColor));
        this.setMinimumSize(new Dimension(789, 490));
        this.setMaximumSize(new Dimension(this.getToolkit().getScreenSize().width, this.getToolkit().getScreenSize().height));
        this.setExtendedState(parent.getExtendedState());
        this.setLocationRelativeTo(parent);//Mantener siempre debajo del anterior if
        //eventos de la página
        KeyStroke strokeEsc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        this.getRootPane().registerKeyboardAction(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                exit();
            }
        }, strokeEsc, JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    /**
     * Creates new form ABMConsultaCompleta
     */
    public ABMVisit(java.awt.Frame parent, long dni, Patient patient, Visit visit) {
        initComponents();
        this.visit = visit;
        this.dni = dni;
        this.txtaReason.grabFocus();
        daoVisit = new DAOVisit();
        clinicalHistoryFrame = (ClinicalHistory) parent;
        origin = true;
        calendar = Calendar.getInstance();
        String day = calendar.get(Calendar.DAY_OF_MONTH) + "";
        String month = calendar.get(Calendar.MONTH) + 1 + "";
        String year = calendar.get(Calendar.YEAR) + "";
        this.lblDate.setText(day + "/" + month + "/" + year);
        fillVisitFields(this.visit);
        fillPatientFields(patient);
        setButtonsState(false);
        setFieldsState(!origin);
        this.setLocationRelativeTo(parent);
        setIconImage(getIconImage());
        StyleManager.paint(this);
        pnlDate.setBackground(StyleManager.getSecondaryColor(StyleManager.actualColor));
        pnlFullName.setBackground(StyleManager.getSecondaryColor(StyleManager.actualColor));
        this.setMinimumSize(new Dimension(789, 490));
        this.setMaximumSize(new Dimension(this.getToolkit().getScreenSize().width, this.getToolkit().getScreenSize().height));
        this.setExtendedState(parent.getExtendedState());
        this.setLocationRelativeTo(parent);//Mantener siempre debajo del anterior if
        //eventos de la página
        KeyStroke strokeEsc = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        this.getRootPane().registerKeyboardAction(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                exit();
            }
        }, strokeEsc, JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpMAF = new javax.swing.ButtonGroup();
        pnlExams = new javax.swing.JTabbedPane();
        pnlPhysical = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtaPhysicalExam = new javax.swing.JTextArea();
        pnlReason = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtaReason = new javax.swing.JTextArea();
        pnlDate = new javax.swing.JPanel();
        lblstaticDate = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        pnlTreatment = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtaTreatment = new javax.swing.JTextArea();
        pnlComplementaryStudies = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtaComplementaryStudies = new javax.swing.JTextArea();
        pnlLaboratory = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtaLaboratory = new javax.swing.JTextArea();
        pnlDiagnosis = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtaDiagnosis = new javax.swing.JTextArea();
        pnlButtons = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        pnlPatientsData = new javax.swing.JPanel();
        lblstaticDni = new javax.swing.JLabel();
        lblstaticInsuranceNumber = new javax.swing.JLabel();
        lblstaticPPHealthInsurance = new javax.swing.JLabel();
        lblstaticBirthday = new javax.swing.JLabel();
        lblDni = new javax.swing.JLabel();
        lblBirthday = new javax.swing.JLabel();
        lblInsuranceNumber = new javax.swing.JLabel();
        lblPPHealthInsurance = new javax.swing.JLabel();
        lblstaticFirstVisitDate = new javax.swing.JLabel();
        lblFirstVisitDate = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblstaticCity = new javax.swing.JLabel();
        pnlFullName = new javax.swing.JPanel();
        lblNombrePaciente = new javax.swing.JLabel();
        lblstaticNombre = new javax.swing.JLabel();
        lblstaticAge = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblstaticAddress = new javax.swing.JLabel();
        pnlBiopsy = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        txtaBiopsy = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Consulta Completa");
        setMinimumSize(new java.awt.Dimension(889, 490));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        pnlExams.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Exámenes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlExams.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtaPhysicalExam.setColumns(20);
        txtaPhysicalExam.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaPhysicalExam.setLineWrap(true);
        txtaPhysicalExam.setRows(2);
        txtaPhysicalExam.setTabSize(0);
        txtaPhysicalExam.setWrapStyleWord(true);
        txtaPhysicalExam.setNextFocusableComponent(txtaComplementaryStudies);
        txtaPhysicalExam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaPhysicalExamKeyPressed(evt);
            }
        });
        jScrollPane12.setViewportView(txtaPhysicalExam);

        javax.swing.GroupLayout pnlPhysicalLayout = new javax.swing.GroupLayout(pnlPhysical);
        pnlPhysical.setLayout(pnlPhysicalLayout);
        pnlPhysicalLayout.setHorizontalGroup(
            pnlPhysicalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
        );
        pnlPhysicalLayout.setVerticalGroup(
            pnlPhysicalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
        );

        pnlExams.addTab("Físico", pnlPhysical);

        pnlReason.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Motivo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlReason.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        txtaReason.setColumns(20);
        txtaReason.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaReason.setLineWrap(true);
        txtaReason.setRows(2);
        txtaReason.setTabSize(0);
        txtaReason.setWrapStyleWord(true);
        txtaReason.setNextFocusableComponent(txtaTreatment);
        txtaReason.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaReasonKeyPressed(evt);
            }
        });
        jScrollPane9.setViewportView(txtaReason);

        javax.swing.GroupLayout pnlReasonLayout = new javax.swing.GroupLayout(pnlReason);
        pnlReason.setLayout(pnlReasonLayout);
        pnlReasonLayout.setHorizontalGroup(
            pnlReasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );
        pnlReasonLayout.setVerticalGroup(
            pnlReasonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );

        pnlDate.setBackground(new java.awt.Color(228, 228, 241));
        pnlDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(153, 153, 153), new java.awt.Color(255, 255, 255), null));

        lblstaticDate.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblstaticDate.setForeground(new java.awt.Color(0, 51, 102));
        lblstaticDate.setText("Fecha:");

        lblDate.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        lblDate.setForeground(new java.awt.Color(0, 51, 102));
        lblDate.setText("FechaDeHoy");

        javax.swing.GroupLayout pnlDateLayout = new javax.swing.GroupLayout(pnlDate);
        pnlDate.setLayout(pnlDateLayout);
        pnlDateLayout.setHorizontalGroup(
            pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDateLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(lblstaticDate, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDate, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
        );
        pnlDateLayout.setVerticalGroup(
            pnlDateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblstaticDate, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
            .addComponent(lblDate, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        pnlTreatment.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Tratamiento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlTreatment.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        txtaTreatment.setColumns(20);
        txtaTreatment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaTreatment.setLineWrap(true);
        txtaTreatment.setRows(2);
        txtaTreatment.setTabSize(0);
        txtaTreatment.setWrapStyleWord(true);
        txtaTreatment.setNextFocusableComponent(txtaComplementaryStudies);
        txtaTreatment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaTreatmentKeyPressed(evt);
            }
        });
        jScrollPane7.setViewportView(txtaTreatment);

        javax.swing.GroupLayout pnlTreatmentLayout = new javax.swing.GroupLayout(pnlTreatment);
        pnlTreatment.setLayout(pnlTreatmentLayout);
        pnlTreatmentLayout.setHorizontalGroup(
            pnlTreatmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );
        pnlTreatmentLayout.setVerticalGroup(
            pnlTreatmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
        );

        pnlComplementaryStudies.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Estudios Complementarios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlComplementaryStudies.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        txtaComplementaryStudies.setColumns(20);
        txtaComplementaryStudies.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaComplementaryStudies.setLineWrap(true);
        txtaComplementaryStudies.setRows(2);
        txtaComplementaryStudies.setTabSize(0);
        txtaComplementaryStudies.setWrapStyleWord(true);
        txtaComplementaryStudies.setNextFocusableComponent(txtaLaboratory);
        txtaComplementaryStudies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaComplementaryStudiesKeyPressed(evt);
            }
        });
        jScrollPane10.setViewportView(txtaComplementaryStudies);

        javax.swing.GroupLayout pnlComplementaryStudiesLayout = new javax.swing.GroupLayout(pnlComplementaryStudies);
        pnlComplementaryStudies.setLayout(pnlComplementaryStudiesLayout);
        pnlComplementaryStudiesLayout.setHorizontalGroup(
            pnlComplementaryStudiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );
        pnlComplementaryStudiesLayout.setVerticalGroup(
            pnlComplementaryStudiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );

        pnlLaboratory.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Laboratorio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlLaboratory.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        txtaLaboratory.setColumns(20);
        txtaLaboratory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaLaboratory.setLineWrap(true);
        txtaLaboratory.setRows(2);
        txtaLaboratory.setTabSize(0);
        txtaLaboratory.setWrapStyleWord(true);
        txtaLaboratory.setNextFocusableComponent(txtaDiagnosis);
        txtaLaboratory.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaLaboratoryKeyPressed(evt);
            }
        });
        jScrollPane8.setViewportView(txtaLaboratory);

        javax.swing.GroupLayout pnlLaboratoryLayout = new javax.swing.GroupLayout(pnlLaboratory);
        pnlLaboratory.setLayout(pnlLaboratoryLayout);
        pnlLaboratoryLayout.setHorizontalGroup(
            pnlLaboratoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
        );
        pnlLaboratoryLayout.setVerticalGroup(
            pnlLaboratoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pnlDiagnosis.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Diagnóstico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlDiagnosis.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        txtaDiagnosis.setColumns(20);
        txtaDiagnosis.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaDiagnosis.setLineWrap(true);
        txtaDiagnosis.setRows(2);
        txtaDiagnosis.setTabSize(0);
        txtaDiagnosis.setWrapStyleWord(true);
        txtaDiagnosis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaDiagnosisKeyPressed(evt);
            }
        });
        jScrollPane11.setViewportView(txtaDiagnosis);

        javax.swing.GroupLayout pnlDiagnosisLayout = new javax.swing.GroupLayout(pnlDiagnosis);
        pnlDiagnosis.setLayout(pnlDiagnosisLayout);
        pnlDiagnosisLayout.setHorizontalGroup(
            pnlDiagnosisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane11)
        );
        pnlDiagnosisLayout.setVerticalGroup(
            pnlDiagnosisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
        );

        pnlButtons.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(0, 51, 102));
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cancel_enabled.png"))); // NOI18N
        btnCancel.setText("Cancelar");
        btnCancel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnCancel.setContentAreaFilled(false);
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancel.setEnabled(false);
        btnCancel.setNextFocusableComponent(btnBack);
        btnCancel.setOpaque(true);
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelMouseEntered(evt);
            }
        });
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(0, 51, 102));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save_enabled.png"))); // NOI18N
        btnSave.setText("Guardar");
        btnSave.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnSave.setContentAreaFilled(false);
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSave.setNextFocusableComponent(btnCancel);
        btnSave.setOpaque(true);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnModify.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnModify.setForeground(new java.awt.Color(0, 51, 102));
        btnModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/edit_enabled.png"))); // NOI18N
        btnModify.setText("Modificar");
        btnModify.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnModify.setContentAreaFilled(false);
        btnModify.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnModify.setEnabled(false);
        btnModify.setNextFocusableComponent(txtaReason);
        btnModify.setOpaque(true);
        btnModify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnModifyMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnModifyMouseEntered(evt);
            }
        });
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(0, 51, 102));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/home_enabled.png"))); // NOI18N
        btnBack.setText("Volver");
        btnBack.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        btnBack.setContentAreaFilled(false);
        btnBack.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnBack.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnBack.setNextFocusableComponent(btnModify);
        btnBack.setOpaque(true);
        btnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBackMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBackMouseEntered(evt);
            }
        });
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createSequentialGroup()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlPatientsData.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Datos del Paciente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlPatientsData.setForeground(new java.awt.Color(204, 204, 255));

        lblstaticDni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticDni.setText("Nro. Documento:");

        lblstaticInsuranceNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticInsuranceNumber.setText("Nro. Afiliado:");

        lblstaticPPHealthInsurance.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticPPHealthInsurance.setText("Obra Social:");

        lblstaticBirthday.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticBirthday.setText("Fecha de Nacimiento:");

        lblDni.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDni.setText("35953232");

        lblBirthday.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblBirthday.setText("21/03/1991");

        lblInsuranceNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblInsuranceNumber.setText("3-4534543-2");

        lblPPHealthInsurance.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPPHealthInsurance.setText("OSPAC");

        lblstaticFirstVisitDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticFirstVisitDate.setText("Fecha de Primera Consulta:");

        lblFirstVisitDate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFirstVisitDate.setText("0 -");

        lblCity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCity.setText("423654");

        lblstaticCity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticCity.setText("Localidad:");

        pnlFullName.setBackground(new java.awt.Color(228, 228, 241));
        pnlFullName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(153, 153, 153), new java.awt.Color(255, 255, 255), null));

        lblNombrePaciente.setFont(new java.awt.Font("Tahoma", 3, 15)); // NOI18N
        lblNombrePaciente.setForeground(new java.awt.Color(0, 51, 102));
        lblNombrePaciente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNombrePaciente.setText("Lopez, Juan Carlos");
        lblNombrePaciente.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblstaticNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticNombre.setText("Apellido y Nombre:");

        javax.swing.GroupLayout pnlFullNameLayout = new javax.swing.GroupLayout(pnlFullName);
        pnlFullName.setLayout(pnlFullNameLayout);
        pnlFullNameLayout.setHorizontalGroup(
            pnlFullNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFullNameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblstaticNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        pnlFullNameLayout.setVerticalGroup(
            pnlFullNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFullNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblNombrePaciente, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                .addComponent(lblstaticNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
        );

        lblstaticAge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticAge.setText("Edad:");

        lblAge.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAge.setText("0");

        lblAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAddress.setText("423654");

        lblstaticAddress.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblstaticAddress.setText("Domicilio:");

        javax.swing.GroupLayout pnlPatientsDataLayout = new javax.swing.GroupLayout(pnlPatientsData);
        pnlPatientsData.setLayout(pnlPatientsDataLayout);
        pnlPatientsDataLayout.setHorizontalGroup(
            pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                        .addComponent(pnlFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                                .addComponent(lblstaticBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(4, 4, 4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPatientsDataLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblstaticCity, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblstaticAge, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblstaticDni, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                                .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(31, 31, 31))
                            .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblCity, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblBirthday, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblstaticFirstVisitDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPatientsDataLayout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblstaticPPHealthInsurance)
                                    .addComponent(lblstaticInsuranceNumber)))
                            .addComponent(lblstaticAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                                .addComponent(lblFirstVisitDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(112, 112, 112))
                            .addComponent(lblPPHealthInsurance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblInsuranceNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(168, 168, 168))))
        );
        pnlPatientsDataLayout.setVerticalGroup(
            pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                .addComponent(pnlFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                                .addComponent(lblstaticBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3)
                                .addComponent(lblstaticDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(5, 5, 5)
                                .addComponent(lblstaticAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                                .addComponent(lblBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(3, 3, 3)
                                .addComponent(lblDni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(5, 5, 5)
                                .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblstaticCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlPatientsDataLayout.createSequentialGroup()
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblstaticFirstVisitDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFirstVisitDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(3, 3, 3)
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblstaticPPHealthInsurance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPPHealthInsurance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(5, 5, 5)
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblstaticInsuranceNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblInsuranceNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPatientsDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblstaticAddress))))
                .addContainerGap())
        );

        pnlBiopsy.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true), "Biopsia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 51, 102))); // NOI18N
        pnlBiopsy.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N

        txtaBiopsy.setColumns(20);
        txtaBiopsy.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtaBiopsy.setLineWrap(true);
        txtaBiopsy.setRows(2);
        txtaBiopsy.setTabSize(0);
        txtaBiopsy.setWrapStyleWord(true);
        txtaBiopsy.setNextFocusableComponent(txtaDiagnosis);
        txtaBiopsy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtaBiopsyKeyPressed(evt);
            }
        });
        jScrollPane13.setViewportView(txtaBiopsy);

        javax.swing.GroupLayout pnlBiopsyLayout = new javax.swing.GroupLayout(pnlBiopsy);
        pnlBiopsy.setLayout(pnlBiopsyLayout);
        pnlBiopsyLayout.setHorizontalGroup(
            pnlBiopsyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane13)
        );
        pnlBiopsyLayout.setVerticalGroup(
            pnlBiopsyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pnlReason, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(pnlTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pnlComplementaryStudies, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pnlLaboratory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlDiagnosis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlPatientsData, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlExams)
                    .addComponent(pnlButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBiopsy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(pnlReason, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlComplementaryStudies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlPatientsData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlExams)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlBiopsy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlLaboratory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        setCustomFont(btnSave, true);
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        setCustomFont(btnSave, false);
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String error = validateFields();
        if (!error.isEmpty()) {
            ValidationsAndMessages.showError(this, "Debe completar los siguientes datos obligatorios: \n" + error);
            return;
        }

        generarConsultaMedica();

        if (!origin) {
            if (daoVisit.registerVisit(visit, dni)) {
                this.idVisit = visit.getId();
                ValidationsAndMessages.showInfo(this, "Registro Exitoso.");
            } else {
                ValidationsAndMessages.showError(this, "Registro Fallido.");
                return;
            }
        } else if (daoVisit.updateVisit(visit)) {
            ValidationsAndMessages.showInfo(this, "Actualización Exitosa.");
            setButtonsState(false);
        } else {
            ValidationsAndMessages.showError(this, "Actualización Fallida.");
            return;
        }
        this.setFieldsState(false);
        clinicalHistoryFrame.fillTable(dni);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseEntered
        setCustomFont(btnCancel, true);
    }//GEN-LAST:event_btnCancelMouseEntered

    private void btnCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseExited
        setCustomFont(btnCancel, false);
    }//GEN-LAST:event_btnCancelMouseExited

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.fillVisitFields(visit);
        this.setFieldsState(false);
        this.btnSave.setEnabled(false);
        this.btnModify.setEnabled(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseEntered
        setCustomFont(btnBack, true);
    }//GEN-LAST:event_btnBackMouseEntered

    private void btnBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBackMouseExited
        setCustomFont(btnBack, false);
    }//GEN-LAST:event_btnBackMouseExited

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.exit();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnModifyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModifyMouseEntered
        setCustomFont(btnModify, true);
    }//GEN-LAST:event_btnModifyMouseEntered

    private void btnModifyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModifyMouseExited
        setCustomFont(btnModify, false);
    }//GEN-LAST:event_btnModifyMouseExited

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        setButtonsState(true);
        setFieldsState(true);
        this.btnSave.setEnabled(true);
        this.btnModify.setEnabled(false);
        this.origin = true;
    }//GEN-LAST:event_btnModifyActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.exit();
    }//GEN-LAST:event_formWindowClosing

    private void txtaReasonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaReasonKeyPressed
        handleFocus(evt);
    }//GEN-LAST:event_txtaReasonKeyPressed

    private void txtaTreatmentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaTreatmentKeyPressed
        handleFocus(evt);
    }//GEN-LAST:event_txtaTreatmentKeyPressed

    private void txtaComplementaryStudiesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaComplementaryStudiesKeyPressed
        handleFocus(evt);
    }//GEN-LAST:event_txtaComplementaryStudiesKeyPressed

    private void txtaLaboratoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaLaboratoryKeyPressed
        handleFocus(evt);
    }//GEN-LAST:event_txtaLaboratoryKeyPressed

    private void txtaDiagnosisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaDiagnosisKeyPressed
        handleFocus(evt);
    }//GEN-LAST:event_txtaDiagnosisKeyPressed

    private void txtaPhysicalExamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaPhysicalExamKeyPressed
        handleFocus(evt);
    }//GEN-LAST:event_txtaPhysicalExamKeyPressed

    private void txtaBiopsyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaBiopsyKeyPressed
        handleFocus(evt);
    }//GEN-LAST:event_txtaBiopsyKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSave;
    private javax.swing.ButtonGroup btngrpMAF;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBirthday;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDni;
    private javax.swing.JLabel lblFirstVisitDate;
    private javax.swing.JLabel lblInsuranceNumber;
    private javax.swing.JLabel lblNombrePaciente;
    private javax.swing.JLabel lblPPHealthInsurance;
    private javax.swing.JLabel lblstaticAddress;
    private javax.swing.JLabel lblstaticAge;
    private javax.swing.JLabel lblstaticBirthday;
    private javax.swing.JLabel lblstaticCity;
    private javax.swing.JLabel lblstaticDate;
    private javax.swing.JLabel lblstaticDni;
    private javax.swing.JLabel lblstaticFirstVisitDate;
    private javax.swing.JLabel lblstaticInsuranceNumber;
    private javax.swing.JLabel lblstaticNombre;
    private javax.swing.JLabel lblstaticPPHealthInsurance;
    private javax.swing.JPanel pnlBiopsy;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlComplementaryStudies;
    private javax.swing.JPanel pnlDate;
    private javax.swing.JPanel pnlDiagnosis;
    private javax.swing.JTabbedPane pnlExams;
    private javax.swing.JPanel pnlFullName;
    private javax.swing.JPanel pnlLaboratory;
    private javax.swing.JPanel pnlPatientsData;
    private javax.swing.JPanel pnlPhysical;
    private javax.swing.JPanel pnlReason;
    private javax.swing.JPanel pnlTreatment;
    private javax.swing.JTextArea txtaBiopsy;
    private javax.swing.JTextArea txtaComplementaryStudies;
    private javax.swing.JTextArea txtaDiagnosis;
    private javax.swing.JTextArea txtaLaboratory;
    private javax.swing.JTextArea txtaPhysicalExam;
    private javax.swing.JTextArea txtaReason;
    private javax.swing.JTextArea txtaTreatment;
    // End of variables declaration//GEN-END:variables

    /**
     * Fills all the data for a visit.
     *
     * @param visit
     */
    private void fillVisitFields(Visit visit) {
        this.lblDate.setText(visit.getDate());
        this.txtaReason.setText(visit.getReason());
        this.txtaTreatment.setText(visit.getTreatment());
        this.txtaComplementaryStudies.setText(visit.getComplementaryStudies());
        this.txtaLaboratory.setText(visit.getLaboratory());
        this.txtaDiagnosis.setText(visit.getDiagnosis());
        this.txtaPhysicalExam.setText(visit.getPhysicalExam());
        this.txtaBiopsy.setText(visit.getBiopsy());
    }

    /**
     * Validates mandatory fields.
     */
    private String validateFields() {
        String incompletas = "";

        if (this.txtaReason.getText().isEmpty()) {
            incompletas += "Motivo \n";
        }

        if (this.txtaTreatment.getText().isEmpty()) {
            incompletas += "Tratamiento \n";
        }

        if (this.txtaDiagnosis.getText().isEmpty()) {
            incompletas += "Diagnóstico \n";
        }

        return incompletas;
    }

    /**
     * Generates the visit.
     */
    private void generarConsultaMedica() {
        visit = new Visit();
        visit.setId(idVisit);
        visit.setDate(this.lblDate.getText());
        visit.setReason(this.txtaReason.getText());
        visit.setTreatment(this.txtaTreatment.getText());
        visit.setComplementaryStudies(this.txtaComplementaryStudies.getText());
        visit.setLaboratory(this.txtaLaboratory.getText());
        visit.setDiagnosis(this.txtaDiagnosis.getText());
        visit.setPhysicalExam(this.txtaPhysicalExam.getText());
        visit.setBiopsy(this.txtaBiopsy.getText());
    }

    /**
     * Method used to set the fields state(enabled, disabled).
     *
     * @param state true (enabled), false (disabled)
     */
    private void setFieldsState(boolean state) {
        this.txtaReason.setEnabled(state);
        this.txtaTreatment.setEnabled(state);
        this.txtaComplementaryStudies.setEnabled(state);
        this.txtaLaboratory.setEnabled(state);
        this.txtaDiagnosis.setEnabled(state);
        this.txtaPhysicalExam.setEnabled(state);
        this.txtaBiopsy.setEnabled(state);
        this.btnCancel.setEnabled(state);
        this.btnModify.setEnabled(!state);
        this.btnSave.setEnabled(state);
    }

    /**
     * Inverts save and modify buttons state(enabled, disabled).
     *
     * @param state true (save enabled), false (save disabled)
     */
    private void setButtonsState(boolean state) {
        this.btnSave.setEnabled(state);
        this.btnModify.setEnabled(!state);
    }

    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("Imagenes/sistema.png"));
        return retValue;
    }

    /**
     * Fills all the patient's data fields.
     *
     * @param patient
     */
    private void fillPatientFields(Patient patient) {
        this.lblNombrePaciente.setText(String.format(Constants.FULLNAME, patient.getLastname(), patient.getName()));

        this.lblBirthday.setText(patient.getBirthday());
        lblAge.setText(String.valueOf(calculateAge(patient.getBirthday())));

        this.lblInsuranceNumber.setText(patient.getPrepaidHealthInsuranceNumber());
        this.lblPPHealthInsurance.setText(patient.getPrepaidHealthInsurance().getName());
        this.lblCity.setText(patient.getCity());
        this.lblDni.setText(patient.getDni() + "");
    }

    /**
     * Exits application validating with the user.
     */
    private void exit() {
        if (!btnSave.isEnabled()) {
            this.dispose();
            if (this.getParent() != null) {
                this.getParent().setVisible(true);
            }
            clinicalHistoryFrame.closeChild(this);
        } else {
            ValidationsAndMessages.validarSalidaVentana(this);
        }
    }

    /**
     * Returns the current visit id.
     *
     * @return -1 if the visit is not saved yet, visit id otherwise
     */
    public int getVisitId() {
        if (visit != null) {
            return visit.getId();
        }
        return -1;
    }
}
